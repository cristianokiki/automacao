/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.view;

import br.com.controller.CaracteristicaCntrl;
import br.com.controller.CaracteristicaListCntrl;
import br.com.controller.Tabela;
import br.com.exception.GenericSqlException;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Cristiano
 */
public class CaracteristicasProdutoView extends javax.swing.JPanel {

    private final String[] COLUNA = {"CÓDIGO", "DESCRIÇÃO"};
    private final CaracteristicaCntrl CARACTCNTRL = new CaracteristicaCntrl();

    /**
     * Creates new form CaracteristicasProdutoView
     */
    public CaracteristicasProdutoView() {
        initComponents();
        this.botao(true, false, false, true);
        this.CARACTCNTRL.setCaract(CaracteristicaListCntrl.getInstance().getCaracteristica().get(this.indexPane()));
        this.Listar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTPTabela = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTBCapacidade = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTBCategoria = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTBCor = new javax.swing.JTable();
        jBTListar = new javax.swing.JButton();
        jBTExcluir = new javax.swing.JButton();
        jBTAlterar = new javax.swing.JButton();
        jBTAdicionar = new javax.swing.JButton();
        jLBTitulo = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jTPTabela.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jTPTabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTPTabelaMouseClicked(evt);
            }
        });

        jTBCapacidade.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTBCapacidade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTBCapacidadeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTBCapacidade);

        jTPTabela.addTab("Capacidade", jScrollPane1);

        jTBCategoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTBCategoria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTBCategoriaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTBCategoria);

        jTPTabela.addTab("Categoria", jScrollPane2);

        jTBCor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTBCor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTBCorMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTBCor);

        jTPTabela.addTab("Cor", jScrollPane3);

        jBTListar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jBTListar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/icones/if_Renew_105218.png"))); // NOI18N
        jBTListar.setText("LISTAR");
        jBTListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTListarActionPerformed(evt);
            }
        });

        jBTExcluir.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jBTExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/icones/if_Close_105221.png"))); // NOI18N
        jBTExcluir.setText("EXCLUIR");
        jBTExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTExcluirActionPerformed(evt);
            }
        });

        jBTAlterar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jBTAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/icones/if_Refresh_105225.png"))); // NOI18N
        jBTAlterar.setText("ALTERAR");
        jBTAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTAlterarActionPerformed(evt);
            }
        });

        jBTAdicionar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jBTAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/icones/if_Create_105261.png"))); // NOI18N
        jBTAdicionar.setText("ADICIONAR");
        jBTAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTAdicionarActionPerformed(evt);
            }
        });

        jLBTitulo.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLBTitulo.setText("CARACTERISTICAS PRODUTOS");
        jLBTitulo.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTPTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jBTAdicionar)
                        .addGap(18, 18, 18)
                        .addComponent(jBTAlterar)
                        .addGap(18, 18, 18)
                        .addComponent(jBTExcluir)
                        .addGap(18, 18, 18)
                        .addComponent(jBTListar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLBTitulo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLBTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTPTabela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBTAdicionar)
                    .addComponent(jBTAlterar)
                    .addComponent(jBTExcluir)
                    .addComponent(jBTListar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jBTListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTListarActionPerformed
        this.botao(true, false, false, true);
        this.Listar();
    }//GEN-LAST:event_jBTListarActionPerformed

    private void jBTExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTExcluirActionPerformed
        int op = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir o item selecionado?");
        if (op == 0) {
            int cod = this.idCaracteristica();
            try {
                if (this.excluir(cod)) {
                    JOptionPane.showMessageDialog(null, "Excluído com sucesso!");
                }
            } catch (GenericSqlException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_jBTExcluirActionPerformed

    private void jTBCapacidadeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTBCapacidadeMouseClicked
        this.botao(true, true, true, true);
    }//GEN-LAST:event_jTBCapacidadeMouseClicked

    private void jTBCategoriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTBCategoriaMouseClicked
        this.botao(true, true, true, true);
    }//GEN-LAST:event_jTBCategoriaMouseClicked

    private void jTBCorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTBCorMouseClicked
        this.botao(true, true, true, true);
    }//GEN-LAST:event_jTBCorMouseClicked

    private void jTPTabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTPTabelaMouseClicked
        this.CARACTCNTRL.setCaract(CaracteristicaListCntrl.getInstance().getCaracteristica().get(this.indexPane()));
        this.Listar();
        this.botao(true, false, false, true);
    }//GEN-LAST:event_jTPTabelaMouseClicked

    private void jBTAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTAdicionarActionPerformed

        String descricao = JOptionPane.showInputDialog("Descrição:");
        if (descricao != null && !descricao.isEmpty()) {
            try {
                if (this.adicionar(descricao)) {
                    JOptionPane.showMessageDialog(null, "Salvo com sucesso!");
                }
            } catch (GenericSqlException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_jBTAdicionarActionPerformed

    private void jBTAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTAlterarActionPerformed
        Integer codigo = this.idCaracteristica();
        String descricao = JOptionPane.showInputDialog("Nova descrição:");
        if (descricao != null && !descricao.isEmpty()) {
            try {
                if (this.atualizar(codigo, descricao)) {
                    JOptionPane.showMessageDialog(null, "Salvo com sucesso!");
                }
            } catch (GenericSqlException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_jBTAlterarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBTAdicionar;
    private javax.swing.JButton jBTAlterar;
    private javax.swing.JButton jBTExcluir;
    private javax.swing.JButton jBTListar;
    private javax.swing.JLabel jLBTitulo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTBCapacidade;
    private javax.swing.JTable jTBCategoria;
    private javax.swing.JTable jTBCor;
    private javax.swing.JTabbedPane jTPTabela;
    // End of variables declaration//GEN-END:variables

    private void preencheCapacidade() {
        List linha = this.CARACTCNTRL.getCaract().listarTabela();
        Tabela tab = new Tabela(linha, COLUNA);
        this.jTBCapacidade.setModel(tab);
    }

    private void preencheCategoria() {
        List linha = this.CARACTCNTRL.getCaract().listarTabela();
        Tabela tab = new Tabela(linha, COLUNA);
        this.jTBCategoria.setModel(tab);
    }

    private void preencheCor() {
        List linha = this.CARACTCNTRL.getCaract().listarTabela();
        Tabela tab = new Tabela(linha, COLUNA);
        this.jTBCor.setModel(tab);
    }

    private void botao(boolean adicionar, boolean alterar, boolean excluir, boolean listar) {
        this.jBTAdicionar.setEnabled(adicionar);
        this.jBTAlterar.setEnabled(alterar);
        this.jBTExcluir.setEnabled(excluir);
        this.jBTListar.setEnabled(listar);
    }

    private void Listar() {
        switch (this.indexPane()) {
            case 0:
                this.preencheCapacidade();
                break;
            case 1:
                this.preencheCategoria();
                break;
            case 2:
                this.preencheCor();
                break;
        }
    }

    private int indexPane() {
        return this.jTPTabela.getSelectedIndex();
    }

    private boolean adicionar(String descricao) throws GenericSqlException {
        this.CARACTCNTRL.setDescricao(descricao);
        return this.CARACTCNTRL.adicionar();
    }

    private boolean excluir(Integer id) throws GenericSqlException {
        this.CARACTCNTRL.setId(id);
        return this.CARACTCNTRL.apagar();
    }

    private boolean atualizar(Integer id, String descricao) throws GenericSqlException {
        this.CARACTCNTRL.setDescricao(descricao);
        this.CARACTCNTRL.setId(id);
        return this.CARACTCNTRL.alterar();
    }

    private List listar() {
        return this.CARACTCNTRL.listarTab();
    }

    private Integer idCaracteristica() {
        Integer codCaracteristica = null;
        int linha;
        switch (this.jTPTabela.getSelectedIndex()) {
            case 0:
                linha = this.jTBCapacidade.getSelectedRow();
                codCaracteristica = Integer.parseInt(this.jTBCapacidade.getValueAt(linha, 0).toString());
                break;
            case 1:
                linha = this.jTBCategoria.getSelectedRow();
                codCaracteristica = Integer.parseInt(this.jTBCategoria.getValueAt(linha, 0).toString());
                break;
            case 2:
                linha = this.jTBCor.getSelectedRow();
                codCaracteristica = Integer.parseInt(this.jTBCor.getValueAt(linha, 0).toString());
                break;
        }
        return codCaracteristica;
    }

}
