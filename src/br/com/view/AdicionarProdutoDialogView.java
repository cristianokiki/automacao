/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.view;

import br.com.controller.CapacidadeCntrl;
import br.com.controller.CategoriaCntrl;
import br.com.controller.CorCntrl;
import br.com.controller.ProdutoCntrl;
import br.com.controller.ValidacaoCntrl;
import br.com.exception.GenericSqlException;
import br.com.exception.GenericValidacaoException;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Cristiano
 */
public class AdicionarProdutoDialogView extends javax.swing.JDialog {

    /**
     * Creates new form CadastroProdutoDialog
     *
     * @param parent
     * @param modal
     */
    public AdicionarProdutoDialogView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.preencheComboBoxCap();
        this.preencheComboBoxCat();
        this.preencheComboBoxCor();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPCaracteristicasProduto = new javax.swing.JPanel();
        jCBCor = new javax.swing.JComboBox<>();
        jLBCapacidade = new javax.swing.JLabel();
        jCBCapacidade = new javax.swing.JComboBox<>();
        jCBCategoria = new javax.swing.JComboBox<>();
        jLBCategoria = new javax.swing.JLabel();
        jLBCor = new javax.swing.JLabel();
        jLBTitulo = new javax.swing.JLabel();
        jBTSalvar = new javax.swing.JButton();
        jPImagem = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPCaracteristicasProduto.setBackground(new java.awt.Color(255, 255, 255));

        jCBCor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jCBCor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBCorActionPerformed(evt);
            }
        });

        jLBCapacidade.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLBCapacidade.setText("CAPACIDADE:");

        jCBCapacidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jCBCapacidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBCapacidadeActionPerformed(evt);
            }
        });

        jCBCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jCBCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBCategoriaActionPerformed(evt);
            }
        });

        jLBCategoria.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLBCategoria.setText("CATEGORIA:");

        jLBCor.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLBCor.setText("COR:");

        javax.swing.GroupLayout jPCaracteristicasProdutoLayout = new javax.swing.GroupLayout(jPCaracteristicasProduto);
        jPCaracteristicasProduto.setLayout(jPCaracteristicasProdutoLayout);
        jPCaracteristicasProdutoLayout.setHorizontalGroup(
            jPCaracteristicasProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCaracteristicasProdutoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPCaracteristicasProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPCaracteristicasProdutoLayout.createSequentialGroup()
                        .addComponent(jLBCategoria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCBCategoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPCaracteristicasProdutoLayout.createSequentialGroup()
                        .addGroup(jPCaracteristicasProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPCaracteristicasProdutoLayout.createSequentialGroup()
                                .addComponent(jLBCor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCBCor, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPCaracteristicasProdutoLayout.createSequentialGroup()
                                .addComponent(jLBCapacidade)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCBCapacidade, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 53, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPCaracteristicasProdutoLayout.setVerticalGroup(
            jPCaracteristicasProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCaracteristicasProdutoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPCaracteristicasProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLBCategoria)
                    .addComponent(jCBCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPCaracteristicasProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLBCapacidade)
                    .addComponent(jCBCapacidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPCaracteristicasProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLBCor)
                    .addComponent(jCBCor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLBTitulo.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLBTitulo.setForeground(new java.awt.Color(0, 51, 255));
        jLBTitulo.setText("PRODUTO");
        jLBTitulo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CADASTRO", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N

        jBTSalvar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jBTSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/icones/if_floppy_disk_save_103863.png"))); // NOI18N
        jBTSalvar.setText("SALVAR");
        jBTSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTSalvarActionPerformed(evt);
            }
        });

        jPImagem.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/icones/copoeprato.png"))); // NOI18N

        javax.swing.GroupLayout jPImagemLayout = new javax.swing.GroupLayout(jPImagem);
        jPImagem.setLayout(jPImagemLayout);
        jPImagemLayout.setHorizontalGroup(
            jPImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPImagemLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addContainerGap())
        );
        jPImagemLayout.setVerticalGroup(
            jPImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPImagemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 45, Short.MAX_VALUE)
                .addComponent(jPCaracteristicasProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPImagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jBTSalvar)
                        .addGap(10, 10, 10)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLBTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLBTitulo)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPImagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBTSalvar)
                        .addGap(0, 39, Short.MAX_VALUE))
                    .addComponent(jPCaracteristicasProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBTSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTSalvarActionPerformed
        try {
            if (validaCampos()) {
                Integer cat_id = ValidacaoCntrl.temCategoria(this.jCBCategoria.getSelectedItem().toString());
                Integer cor_id = ValidacaoCntrl.temCor(this.jCBCor.getSelectedItem().toString());
                Integer cap_id;
                cap_id = ValidacaoCntrl.temCapacidade(Integer.parseInt(this.jCBCapacidade.getSelectedItem().toString()));
                ProdutoCntrl prodCntrl = new ProdutoCntrl();
                if (prodCntrl.salvar(cap_id, cat_id, cor_id)) {
                    JOptionPane.showMessageDialog(null, "Salvo com sucesso!");
                    this.dispose();
                }
            }
        } catch (GenericValidacaoException | GenericSqlException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Número inválido!");
        }
    }//GEN-LAST:event_jBTSalvarActionPerformed

    private void jCBCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBCategoriaActionPerformed
        if (jCBCategoria.getSelectedIndex() == 1) {
            String categoria = JOptionPane.showInputDialog(null, "Categoria:");
            if (categoria != null) {
                CategoriaCntrl catCntrl = new CategoriaCntrl();
                try {
                    catCntrl.salvar(categoria.trim());
                    this.preencheComboBoxCat();
                    this.jCBCategoria.setSelectedItem(catCntrl.ultimaCategoria());
                } catch (GenericSqlException ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                    this.preencheComboBoxCat();
                }
            } else {
                this.preencheComboBoxCat();
            }
        }
    }//GEN-LAST:event_jCBCategoriaActionPerformed

    private void jCBCapacidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBCapacidadeActionPerformed
        if (jCBCapacidade.getSelectedIndex() == 1) {
            String capacidade = JOptionPane.showInputDialog(null, "Capacidade:");
            if (capacidade != null) {
                CapacidadeCntrl capCntrl = new CapacidadeCntrl();
                try {
                    capCntrl.salvar(capacidade.trim());
                    this.preencheComboBoxCap();
                    this.jCBCapacidade.setSelectedItem(capCntrl.ultimaCapacidade().toString());
                } catch (GenericSqlException ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                    this.preencheComboBoxCap();
                } catch (NumberFormatException ex1) {
                    JOptionPane.showMessageDialog(null, "Apenas números!");
                    this.preencheComboBoxCap();
                }
            } else {
                this.preencheComboBoxCap();
            }
        }
    }//GEN-LAST:event_jCBCapacidadeActionPerformed

    private void jCBCorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBCorActionPerformed
        if (jCBCor.getSelectedIndex() == 1) {
            String cor = JOptionPane.showInputDialog(null, "Cor:");
            if (cor != null) {
                CorCntrl corCntrl = new CorCntrl();
                try {
                    corCntrl.salvar(cor.trim());
                    this.preencheComboBoxCor();
                    this.jCBCor.setSelectedItem(corCntrl.ultimaCor());
                } catch (GenericSqlException ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                    this.preencheComboBoxCor();
                } catch (NumberFormatException ex1) {
                    JOptionPane.showMessageDialog(null, "Apenas números!");
                    this.preencheComboBoxCor();
                }
            } else {
                this.preencheComboBoxCor();
            }
        }
    }//GEN-LAST:event_jCBCorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdicionarProdutoDialogView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdicionarProdutoDialogView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdicionarProdutoDialogView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdicionarProdutoDialogView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            AdicionarProdutoDialogView dialog = new AdicionarProdutoDialogView(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBTSalvar;
    private javax.swing.JComboBox<String> jCBCapacidade;
    private javax.swing.JComboBox<String> jCBCategoria;
    private javax.swing.JComboBox<String> jCBCor;
    private javax.swing.JLabel jLBCapacidade;
    private javax.swing.JLabel jLBCategoria;
    private javax.swing.JLabel jLBCor;
    private javax.swing.JLabel jLBTitulo;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPCaracteristicasProduto;
    private javax.swing.JPanel jPImagem;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    private void preencheComboBoxCap() {
        CapacidadeCntrl capCntrl = new CapacidadeCntrl();
        List listaCap = capCntrl.listar();
        this.jCBCapacidade.removeAllItems();
        this.jCBCapacidade.addItem("-----");
        this.jCBCapacidade.addItem("<<<NOVO>>>");
        for (int i = 0; i < listaCap.size(); i++) {
            this.jCBCapacidade.addItem(listaCap.get(i).toString());
        }
    }

    private void preencheComboBoxCat() {
        CategoriaCntrl catCntrl = new CategoriaCntrl();
        List listaCat = catCntrl.listar();
        this.jCBCategoria.removeAllItems();
        this.jCBCategoria.addItem("-----");
        this.jCBCategoria.addItem("<<<NOVO>>>");
        for (int i = 0; i < listaCat.size(); i++) {
            this.jCBCategoria.addItem(listaCat.get(i).toString());
        }
    }

    private void preencheComboBoxCor() {
        CorCntrl corCntrl = new CorCntrl();
        List listaCor = corCntrl.listar();
        this.jCBCor.removeAllItems();
        this.jCBCor.addItem("-----");
        this.jCBCor.addItem("<<<NOVO>>>");
        for (int i = 0; i < listaCor.size(); i++) {
            this.jCBCor.addItem(listaCor.get(i).toString());
        }
    }

    private boolean validaCampos() throws GenericValidacaoException {
        if (this.jCBCapacidade.getSelectedIndex() < 2 || this.jCBCategoria.getSelectedIndex() < 2 || this.jCBCor.getSelectedIndex() < 2) {
            throw new GenericValidacaoException("Todos os campos devem ser preenchidos!");
        }
        return true;
    }
}
